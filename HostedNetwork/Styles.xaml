<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HostedNetwork">

    <Image x:Key="RadioImage" Source="Images\Radio.png" />

    <Color x:Key="LinkColor">#0088cc</Color>
    <SolidColorBrush x:Key="LinkBrush" Color="{StaticResource LinkColor}"/>
    <Color x:Key="LinkColorHover">#31baff</Color>
    <SolidColorBrush x:Key="LinkBrushHover" Color="{StaticResource LinkColorHover}"/>
    <Color x:Key="LinkClickHover">Orange</Color>
    <SolidColorBrush x:Key="LinkClickHoverBrush" Color="{StaticResource LinkClickHover}"/>
    <Color x:Key="MenuBackColorHover">LightGray</Color>
    <SolidColorBrush x:Key="MenuBackBrushHover" Color="{StaticResource MenuBackColorHover}"/>
    <Color x:Key="StandardMenuForeColor">#414141</Color>
    <SolidColorBrush x:Key="StandardMenuForeBrush" Color="{StaticResource StandardMenuForeColor}"/>
    


    <!--#endregion-->

    <Style TargetType="{x:Type Grid}" x:Key="GridStyle">
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFEAEAEA"/>
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FFB2BED6"/>
            </Trigger>

        </Style.Triggers>
    </Style>


    <Style x:Key="LinkStyle" TargetType="{x:Type Hyperlink}">

        <Setter Property="Foreground" Value="#0088cc" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource LinkBrushHover}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseCaptured" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource LinkClickHoverBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsLinkPressed" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource LinkBrushHover}" />
                </MultiTrigger.Setters>
            </MultiTrigger>-->

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray" />
            </Trigger>

        </Style.Triggers>


    </Style>
    <Style TargetType="{x:Type ToolTip}">

        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="FontSize" Value="11" />

    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SelectionBrush" Value="#FFE2E2E2" />
        <Setter Property="Background" Value="#F7F7F7"/>
        <Setter Property="Foreground" Value="#FF464646"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="DarkGray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="PasswordStyle">
        
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SelectionBrush" Value="#FFE2E2E2" />
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="Background" Value="#F7F7F7"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="DarkGray" />
            </Trigger>
        </Style.Triggers>

    
    </Style>

    <Style TargetType="{x:Type Ellipse}" x:Key="goodEllipse">
        <Setter Property="Fill" Value="#4C93C9FF" />
        <Setter Property="Stroke" Value="#FFC0DAFF"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="Tag" Value="OFF"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Fill" Value="#4C4EE284"/>
                    <Setter Property="Stroke" Value="#FFC0FFD1"/>
                </MultiTrigger.Setters>
                
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Tag" Value="ON"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Fill" Value="#662BA257"/>
                    <Setter Property="Stroke" Value="#FF74DE91"/>
                </MultiTrigger.Setters>

            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="Tag" Value="ON"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Stroke" Value="#FFFB8892"/>
                    <Setter Property="Fill" Value="#4CE065A3"/>
                </MultiTrigger.Setters>

            </MultiTrigger>

       

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Image}" x:Key="goodImage">
        <Setter Property="Source" Value="Images/WireNone.png" />
        <Style.Triggers>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=radarEllipse, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding ElementName=radarEllipse, Path=Tag}" Value="OFF"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/WireActive.png" />
                </MultiDataTrigger.Setters>

            </MultiDataTrigger>


            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=radarEllipse, Path=IsMouseOver}" Value="True"/>
                    <Condition Binding="{Binding ElementName=radarEllipse, Path=Tag}" Value="ON"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/WireDeactive.png" />
                </MultiDataTrigger.Setters>

            </MultiDataTrigger>


            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=radarEllipse, Path=IsMouseOver}" Value="False"/>
                    <Condition Binding="{Binding ElementName=radarEllipse, Path=Tag}" Value="ON"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="Images/WireActive.png" />
                </MultiDataTrigger.Setters>

            </MultiDataTrigger>


        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="AlertBorder">
        <Setter Property="BorderBrush" Value="Gray" />
        <Style.Triggers>
            <Trigger Property="Tag" Value="Normal">
                <Setter Property="BorderBrush" Value="Gray" />
            </Trigger>

            <Trigger Property="Tag" Value="Success">
                <Setter Property="BorderBrush" Value="#FF28C54B" />
                <Setter Property="Background" Value="#FFE4FFE4" />
            </Trigger>

            <Trigger Property="Tag" Value="Error">
                <Setter Property="BorderBrush" Value="#FFFF6161" />
                <Setter Property="Background" Value="#FFFFD8D8" />
            </Trigger>

            <Trigger Property="Tag" Value="Alert">
                <Setter Property="BorderBrush" Value="#FFDCD422" />
                <Setter Property="Background" Value="#FFFFFDDC" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="checkBox">

        
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Background" Value="LightGray" />

        
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="Background" Value="Gray" />
                <Setter Property="BorderBrush" Value="Gray" />
            </Trigger>
        </Style.Triggers>
 
    </Style>

    
    


</ResourceDictionary>